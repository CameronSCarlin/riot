err[i] <- w[i]
}
}
err
G
y
y <- c(-1,1,1,-1)
w <- rep(1/length(x1),each=4)
G <- c(-1,-1,1,-1)
geterr(G,y,w)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- exp(alpha)
}
}
w
geterr <- function(G, y, w){
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
newerr <- sum(err)/sum(w)
alpha <- log((1-newerr)/(newerr))
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
return(alpha)
return(w)
}
geterr(G,y,w)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
y <- c(-1,1,1,-1)
w <- rep(1/length(x1),each=4)
G <- c(-1,-1,1,-1)
geterr(G,y,w)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w
geterr <- function(G, y, w){
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
newerr <- sum(err)/sum(w)
alpha <- log((1-newerr)/(newerr))
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
return(alpha), return(w)
}
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w
G <- c(-1,-1,1,-1)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w <- rep(1/length(x1),each=4)
G <- c(-1,-1,1,-1)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w
G <- c(1,1,1,-1)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w
G <- c(-1,1,-1,-1)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w
G <- c(-1,1,1,1)
err <- c(0,0,0,0)
for (i in 1:length(y)){
if(y[i] == G[i]){
err[i] <- 0
}else{
err[i] <- w[i]
}
}
err
newerr <- sum(err)/sum(w)
newerr
alpha <- log((1-newerr)/(newerr))
alpha
for (i in 1:length(w)){
if(y[i] == G[i]){
w[i] <- w[i]
}else{
w[i] <- w[i]*exp(alpha)
}
}
w
98.87-97.26
99.5-97.97
98.13-97.57
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
x1 = c(3, 3, 6, 6, 1, 0, 0, -1)
x2 = c(1, -1, 1, -1, 0, 1, -1, 0)
y = c(1, 1, 1, 1, -1, -1, -1, -1)
plot1 = ggplot(x1, x2)
x1 = c(3, 3, 6, 6, 1, 0, 0, -1)
x2 = c(1, -1, 1, -1, 0, 1, -1, 0)
y = c(1, 1, 1, 1, -1, -1, -1, -1)
plot1 = ggplot(x1, x2, aes(y))
x1 = c(3, 3, 6, 6, 1, 0, 0, -1)
x2 = c(1, -1, 1, -1, 0, 1, -1, 0)
y = c(1, 1, 1, 1, -1, -1, -1, -1)
plot1 = ggplot(aes(x1, x2))
x1 = c(3, 3, 6, 6, 1, 0, 0, -1)
x2 = c(1, -1, 1, -1, 0, 1, -1, 0)
y = c(1, 1, 1, 1, -1, -1, -1, -1)
plot1 = ggplot(y, aes(x1, x2))
x1 = c(3, 3, 6, 6, 1, 0, 0, -1)
x2 = c(1, -1, 1, -1, 0, 1, -1, 0)
y = c(1, 1, 1, 1, -1, -1, -1, -1)
plot1 <-  ggplot(aes(x1, x2))
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2))
plot1 + geom_point()
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2), colours(y))
plot1 + geom_point()
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2), aes(colour = y))
plot1 + geom_point()
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = y))
plot1 + geom_point()
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y)))
plot1 + geom_point()
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + scale_fill_discrete(name = "New Legend Title")
plot1 + geom_point()
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y)))
plot1 + geom_point()  + scale_fill_discrete(name = "New Legend Title")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y)))
plot1 + geom_point()  + scale_colour_discrete(name = "New Legend Title")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y)))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = "$x_1$")
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x_1)))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression($x_1$)))
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])), y=c(expression(x[2])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])), y=c(expression(x[2])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y")
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])), y=c(expression(x[2])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y") + vline(x=2)
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])), y=c(expression(x[2])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y") + abline(x=2)
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])), y=c(expression(x[2])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y") + abline(a=2)
x1 <-  c(3, 3, 6, 6, 1, 0, 0, -1)
x2 <-  c(1, -1, 1, -1, 0, 1, -1, 0)
y <-  c(1, 1, 1, 1, -1, -1, -1, -1)
df <- data.frame(x1,x2,y)
plot1 <-  ggplot(df, aes(x1, x2, colour = factor(y))) + labs(x = c(expression(x[1])), y=c(expression(x[2])))
plot1 + geom_point()  + scale_colour_discrete(name = "Predicted y") + geom_vline(xintercept = 2)
knitr::opts_chunk$set(echo = TRUE)
df <- data.frame("Year"=c(1976:1985), "FatalAccidents"=c(24,25,31,31,22,21,26,20,16,22),
"PassengerDeaths"=c(734,516,754,877,814,362,764,809,223,1066),
"DeathRate"=c(0.19,0.12,0.15,0.16,0.14,0.06,0.13,0.13,0.03,0.15))
n_sim <- 10000
alpha <- sum(df$FatalAccidents) + 0.01
beta <- length(df$FatalAccidents) + 0.01
theta <- rgamma(n_sim, shape=alpha, rate=beta)
quantile(rpois(n_sim, theta), c(0.025,0.975))
df["miles"] <- df$PassengerDeaths/df$DeathRate*100000000
alpha <- sum(df$FatalAccidents) + 0.01
beta <- sum(df$miles) + 0.01
theta <- rgamma(n_sim, alpha, beta)
quantile(rpois(n_sim, 8e11*theta), c(0.025,0.975))
View(df)
shiny::runGitHub("rcwu-hw3", "usfviz")
shiny::runApp('Documents/MSAN622/riot/League_Viz')
install.packages("dhiny", dependencies = FALSE)
install.packages("shinythemes", dependencies = FALSE)
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
shiny::runApp('Documents/MSAN622/riot/League_Viz')
scale_fill_discrete()
?scale_fill_discrete
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
?scale_fill_manual
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
?geom_bar
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
?geom_smooth
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
shiny::runApp('Documents/MSAN622/riot/League_Viz')
runApp('Documents/MSAN622/riot/League_Viz')
shiny::runApp('Documents/MSAN622/riot/League_Viz')
shiny::runApp('Documents/MSAN622/riot/League_Viz')
setwd("Documents/MSAN622/riot/League_Viz/")
matchdf2 <- read.csv('matchdf.csv', stringsAsFactors = FALSE)
matchdf2$winner <- as.factor(matchdf2$winner)
levels(matchdf2$winner) <- list('No'="0",'Yes'="1")
tab <- table(matchdf2$championName)
tab_s <- sort(tab)
top10 <- tail(names(tab_s), 20)
d_s <- subset(matchdf2, championName %in% top10)
d_s$championName <- factor(d_s$championName, levels = rev(top10))
d_s
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_bar
runApp()
runApp()
runApp()
runApp()
?scale_x_discrete
runApp()
tables(d_s)
table(d_s)
table(d_s$championName)
a <- table(d_s[c("championName", "winner")])
a
ggplot(a, aes(x = championName, fill = factor(winner))) + geom_bar()
a <- as.data.frame(a)
a
ggplot(a, aes(x = championName, fill = factor(winner))) + geom_bar()
ggplot(a, aes(x = championName)) + geom_bar()
ggplot(a, aes(x = championName)) + geom_bar(stat="count")
ggplot(a, aes(x = championName, `frequency<-`())) + geom_bar(stat="ident")
ggplot(a, aes(x = championName, y = Freq, fill = factor(winner))) + geom_bar()
ggplot(a, aes(x = championName, y = Freq)) + geom_bar()
ggplot(a,aes(x = championName,y = Freq, fill = winner))
ggplot(a,aes(x = championName,y = Freq, fill = winner)) + geom_bar()
ggplot(a,aes(x = championName,y = Freq, fill = winner)) + geom_bar(stat = "identity",position = "dodge")
runApp()
ggplot(a,aes(x = championName,y = Freq, fill = winner)) + geom_bar(stat = "identity",position = "dodge")
ggplot(a,aes(x = championName,y = Freq, fill = winner)) + geom_bar(stat = "identity",position = "dodge") + coord_flip()
runApp()
runApp()
ggplot(a, aes(x = championName,y = Freq, fill = winner)) +
geom_bar(stat = "identity",position = "dodge") +
xlab("Picked Champions") + ylab("Count") +
scale_fill_manual(values = c("#BC403E", "#5285C4")) +
scale_x_discrete(limits = rev(levels(d_s$championName))) + coord_flip() +
theme(
axis.title.x = element_text(),
axis.title.y = element_text(),
panel.background = element_blank(),
panel.grid.major = element_line(colour='grey'),
panel.border = element_rect(color = 'grey', fill=NA)
)
runApp()
runApp()
runApp()
